@{
    var messages = ViewBag.Messages as List<ShopBaker.Models.ChatModel>;
    
}

<head>
    <meta charset="utf-8">
    <title>Chat App</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style type="text/css">
        body {
            background-color: #f4f7f6;
            margin-top: 20px;
        }

        .card {
            background: #fff;
            transition: .5s;
            border: 0;
            margin-bottom: 30px;
            border-radius: .55rem;
            box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);
        }

        .chat-app {
            display: flex;
            flex-direction: row;
            width: 100%;
            max-width: 1200px;
            margin: auto;
        }

            .chat-app .people-list {
                flex: 1;
                min-width: 250px;
                max-width: 280px;
                padding: 20px;
                background: #fff;
                border-right: 1px solid #eaeaea;
            }

            .chat-app .chat {
                flex: 3;
                border-left: 1px solid #eaeaea;
            }

        .people-list .chat-list li {
            padding: 10px 15px;
            list-style: none;
            border-radius: 3px;
        }

            .people-list .chat-list li:hover {
                background: #efefef;
                cursor: pointer;
            }

            .people-list .chat-list li.active {
                background: #efefef;
            }

        .people-list .chat-list img,
        .chat .chat-header img {
            width: 45px;
            border-radius: 50%;
        }

        .chat .chat-header {
            padding: 15px 20px;
            border-bottom: 2px solid #f4f7f6;
        }

        .chat .chat-history {
            padding: 20px;
            height: 60vh;
            overflow-y: auto;
            border-bottom: 2px solid #fff;
        }

            .chat .chat-history ul {
                padding: 0;
                margin: 0;
                list-style: none;
            }

                .chat .chat-history ul li {
                    margin-bottom: 30px;
                }

            .chat .chat-history .message {
                padding: 18px 20px;
                line-height: 26px;
                font-size: 16px;
                border-radius: 7px;
                display: inline-block;
                position: relative;
                background: #efefef;
                color: #444;
            }

        .chat .chat-message {
            padding: 20px;
        }

        .input-group .form-control {
            border-radius: 0.55rem;
        }
    </style>
</head>
<body>
    <h1>''</h1>
    <h1>''</h1>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <div class="container">
        <div class="chat-app">
            <div class="people-list">
                @*<div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i class="fa fa-search"></i></span>
                    </div>
                    <input type="text" class="form-control" placeholder="Search...">
                </div>*@
                <ul class="list-unstyled chat-list mt-2 mb-0">
                    
                        <li class="clearfix user-item" data-user-id="1" onclick="loadChat(1)">
                            <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="avatar" class="rounded-circle">
                            <div class="about">
                                <div class="name">Customer Support </div>
                                
                            </div>
                        </li>
                    
                </ul>
            </div>
            <div class="chat">
                <div class="chat-header clearfix">
                    <div class="row">
                        <div class="col-lg-6">
                            <a href="javascript:void(0);">
                                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="avatar">
                            </a>
                            <div class="chat-about">


                                <h6 class="m-b-0">Support Staff</h6>

                            </div>
                        </div>
                        @*<div class="col-lg-6 text-right">
                            <a href="javascript:void(0);" class="btn btn-outline-secondary"><i class="fa fa-camera"></i></a>
                            <a href="javascript:void(0);" class="btn btn-outline-primary"><i class="fa fa-image"></i></a>
                            <a href="javascript:void(0);" class="btn btn-outline-info"><i class="fa fa-cogs"></i></a>
                            <a href="javascript:void(0);" class="btn btn-outline-warning"><i class="fa fa-question"></i></a>
                        </div>*@
                    </div>
                </div>
                <div class="chat-history">
                    <ul class="m-b-0" id="chat-history">
                        @foreach (var message in ViewBag.Messages as List<ShopBaker.Models.ChatModel>)
                        {
                            var messageClass = message.SenderId == ViewBag.UserId ? "my-message" : "other-message";
                            var floatClass = message.SenderId == ViewBag.UserId ? "float-right" : "float-left";

                            <li class="clearfix">
                                <div class="message-data @(message.SenderId == ViewBag.UserId ? "text-right" : "")">
                                    <span class="message-data-time">@message.SentAt.ToString("hh:mm tt, dd/MM/yyyy")</span>

                                </div>
                                <div class="message @messageClass @floatClass">
                                    @message.MessageContent
                                </div>
                            </li>
                        }
                    </ul>
                    <ul class="m-b-0" id="chatMessages">
                        <!-- Tin nhắn sẽ được thêm vào đây thông qua JavaScript -->
                    </ul>
                </div>

                <div class="chat-message clearfix">
                    <div class="input-group mb-0">
                        <div class="input-group-prepend">
                            <span class="input-group-text" onclick="sendMessage()"><i class="fa fa-send"></i></span>
                        </div>
                        <input type="text" id="messageInput" class="form-control" placeholder="Enter text here..." onkeypress="if(event.key === 'Enter') sendMessage()">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let selectedReceiverId = null;

function loadChat(receiverId) {
    selectedReceiverId = receiverId;
    console.log("Loading chat with receiverId:", receiverId); // Hiển thị receiverId khi load chat

    $.ajax({
        url: '@Url.Action("LoadChatMessages", "Chat")',
        type: 'GET',
        data: { receiverId: receiverId },
        success: function (messages) {
            console.log("Messages received:", messages); // Hiển thị danh sách tin nhắn nhận được
            $('#chat-history').empty();
            messages.forEach(message => {
                const messageClass = message.senderId === @ViewBag.UserId ? 'my-message' : 'other-message';
                const floatClass = message.senderId === @ViewBag.UserId ? 'float-right' : 'float-left';

                console.log("Message details:", {
                    senderId: message.senderId,
                    messageContent: message.messageContent,
                    sentAt: message.sentAt,
                    messageClass: messageClass,
                    floatClass: floatClass
                }); // Hiển thị thông tin từng tin nhắn

                $('#chat-history').append(`
                    <li class="clearfix">
                        <div class="message-data ${message.senderId === @ViewBag.UserId ? 'text-right' : ''}">
                            <span class="message-data-time">${message.sentAt}</span>
                        </div>
                        <div class="message ${messageClass} ${floatClass}">
                            ${message.messageContent}
                        </div>
                    </li>
                `);
            });
        },
        error: function (xhr, status, error) {
            console.error("Error loading messages:", error);
        }
    });
}
        function sendMessage() {
            const messageContent = $('#messageInput').val();
            console.log("Message content:", messageContent);
            console.log("Selected receiverId:", selectedReceiverId);

            if (!messageContent) {
                console.warn("Message content cannot be empty.");
                return;
            }
            if (!selectedReceiverId) {
                console.warn("A receiver must be selected before sending a message.");
                return;
            }

            // Gửi dữ liệu lên server
            $.ajax({
                url: '/Chat/SendMessage',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    messageContent: messageContent,
                    receiverId: selectedReceiverId
                }),
                success: function (response) {
                    if (response.success) {

                        $('#messageInput').val(''); // Xóa nội dung sau khi gửi
                        loadChat(selectedReceiverId); // Tải lại cuộc trò chuyện
                    } else {
                        // Hiển thị thông báo lỗi từ server
                        alert("Error: " + response.error);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                    alert("An error occurred while sending the message.");
                }
            });
        }
    </script>
</body>


